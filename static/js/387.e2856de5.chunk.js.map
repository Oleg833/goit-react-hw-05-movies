{"version":3,"file":"static/js/387.e2856de5.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Text/Text.styled.js","services/image-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const CastItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border: 5px solid red;\n  border-radius: 25px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  border-radius: 25px;\n  height: 260px;\n  width: 100%;\n  display: block;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: blueviolet;\n`;\n\nexport const CastName = styled.h3`\n  text-align: center;\n  margin: 0px;\n`;\n\nexport const CastChar = styled.p`\n  margin: 0px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  Img,\n  CastDescr,\n  CastName,\n  CastChar,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieCredits } from 'services/image-service';\nimport Text from 'components/Text/Text.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState(null);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCredits = async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        if (data.length === 0) {\n          return alert('Ther is nothing found!!!');\n        }\n        setCredits(data);\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {credits && (\n        <CastList>\n          {credits.map(({ id, name, character, poster }) => {\n            return (\n              <CastItem key={id}>\n                <Img\n                  src={\n                    poster\n                      ? `https://image.tmdb.org/t/p/w200/${poster}`\n                      : `https://cdn.pixabay.com/photo/2022/03/12/11/15/ukraine-7063987_1280.jpg`\n                  }\n                  alt={name}\n                />\n                <CastDescr>\n                  <CastName>{name}</CastName>\n                  <CastChar>Character: {character}</CastChar>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n      {isLoading && <Loader />}\n      {onError && <Text textAlign=\"center\">{onError}</Text>}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nconst Text = styled.p`\n  font-style: inherit;\n  font-size: 30px;\n  font-weight: 700;\n  text-align: center;\n  margin: 20px;\n`;\n\nexport default Text;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '53d5445e8f959aee965448ea492bd06d',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/all/day?`);\n  return results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path,\n  }));\n};\n\nexport const fetchByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?query=${query}`);\n  return results.map(({ id, title, poster_path: poster }) => ({\n    id,\n    title,\n    poster,\n  }));\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const {\n    data: {\n      id,\n      poster_path: poster,\n      title,\n      release_date: releaseYear,\n      vote_average: userScore,\n      overview,\n      genres,\n    },\n  } = await axios.get(`/movie/${movieId}?`);\n  return {\n    id,\n    poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n  };\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?`);\n  return cast.map(({ id, name, character, profile_path: poster }) => ({\n    id,\n    name,\n    character,\n    poster,\n  }));\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?`);\n  return results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["CastContainer","styled","CastList","CastItem","Img","CastDescr","CastName","CastChar","movieId","useParams","useState","credits","setCredits","onError","setOnError","isLoading","setIsLoading","useEffect","fetchCredits","fetchMovieCredits","data","length","alert","map","id","name","character","poster","src","alt","Loader","textAlign","Text","axios","api_key","include_adults","fetchTrending","results","title","poster_path","fetchByQuery","query","fetchMovieDetails","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","cast","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}