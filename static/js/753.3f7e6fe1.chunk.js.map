{"version":3,"file":"static/js/753.3f7e6fe1.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Text/Text.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/image-service.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 180px;\n  margin: 5px;\n  border-radius: 25px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 15px;\n  border-top-right-radius: 15px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: blueviolet;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListStyled,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, original_title, poster }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={\n                poster\n                  ? `https://image.tmdb.org/t/p/w200/${poster}`\n                  : 'https://cdn.pixabay.com/photo/2022/03/12/11/15/ukraine-7063987_1280.jpg'\n              }\n              alt={title}\n            />\n            <MovieTitle>\n              <h3>{title || original_title}</h3>\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n      poster: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nconst Text = styled.p`\n  font-style: inherit;\n  font-size: 30px;\n  font-weight: 700;\n  text-align: center;\n  margin: 20px;\n`;\n\nexport default Text;\n","import styled from 'styled-components';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  margin-top: 5px;\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  border: none;\n  outline: none;\n  padding: 10px;\n  margin: 0 20px;\n  &::placeholder {\n    color: #3f51b550;\n    font: inherit;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 78px;\n  height: 48px;\n  margin-right: 20px;\n  margin-top: 3px;\n  border: 0;\n  opacity: 0.6;\n  font-size: 20px;\n  font-weight: 600;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: blueviolet;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { FormDiv, Form, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('Enter your query!');\n    }\n\n    onSubmit(query);\n    setQuery('');\n    e.target.reset();\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { fetchByQuery } from 'services/image-service';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Text from 'components/Text/Text.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [onError, setOnError] = useState('');\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        if (searchQuery) {\n          const response = await fetchByQuery(searchQuery);\n          if (response.length === 0) {\n            return alert('There is nothing found by your query!');\n          }\n          setMovies(response);\n        }\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchParams]);\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n\n      {onError && <Text textAlign=\"center\">{onError}</Text>}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '53d5445e8f959aee965448ea492bd06d',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/all/day?`);\n  return results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path,\n  }));\n};\n\nexport const fetchByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?query=${query}`);\n  return results.map(({ id, title, poster_path: poster }) => ({\n    id,\n    title,\n    poster,\n  }));\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const {\n    data: {\n      id,\n      poster_path: poster,\n      title,\n      release_date: releaseYear,\n      vote_average: userScore,\n      overview,\n      genres,\n    },\n  } = await axios.get(`/movie/${movieId}?`);\n  return {\n    id,\n    poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n  };\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?`);\n  return cast.map(({ id, name, character, profile_path: poster }) => ({\n    id,\n    name,\n    character,\n    poster,\n  }));\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?`);\n  return results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["MovieListStyled","styled","MovieItem","MovieLink","Link","Img","MovieTitle","movies","location","useLocation","map","id","title","original_title","poster","to","state","from","src","alt","Text","FormDiv","Form","Input","Button","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","target","reset","type","value","onChange","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","onError","setOnError","useEffect","searchQuery","get","fetchData","fetchByQuery","response","length","Loader","textAlign","MoviesList","axios","api_key","include_adults","fetchTrending","results","data","poster_path","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}