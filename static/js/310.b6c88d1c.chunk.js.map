{"version":3,"file":"static/js/310.b6c88d1c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/services/image-service.js","pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from '../../pages/Home/Home.styled';\n\nconst MovieListComponent = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, original_title, poster }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={\n                poster\n                  ? `https://image.tmdb.org/t/p/w200/${poster}`\n                  : 'https://cdn.pixabay.com/photo/2022/03/12/11/15/ukraine-7063987_1280.jpg'\n              }\n              alt={title}\n            />\n            <MovieTitle>\n              <h3>{title || original_title}</h3>\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nMovieListComponent.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n      poster: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieListComponent;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '53d5445e8f959aee965448ea492bd06d',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const {\n      data: {\n        id,\n        poster_path: poster,\n        title,\n        release_date: releaseYear,\n        vote_average: userScore,\n        overview,\n        genres,\n      },\n    } = await axios.get(`/movie/${movieId}?`);\n    return {\n      id,\n      poster,\n      title,\n      releaseYear: new Date(releaseYear).getFullYear(),\n      userScore: Math.round(userScore * 10),\n      overview,\n      genres,\n    };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// export const fetchMovieCredits = movieId => {\n//   return axios\n//     .get(`/movie/${movieId}/credits?`)\n//     .then(({ data: { cast } }) =>\n//       cast.map(({ id, name, character, profile_path: poster }) => ({\n//         id,\n//         name,\n//         character,\n//         poster,\n//       }))\n//     )\n//     .catch(error => {\n//       alert(error.massage);\n//     });\n// };\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits?`);\n    return cast.map(({ id, name, character, profile_path: poster }) => ({\n      id,\n      name,\n      character,\n      poster,\n    }));\n  } catch (error) {\n    alert(error.massage);\n  }\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #3f51b5;\n  margin: 30px, 0;\n  text-decoration: none;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 180px;\n  margin: 5px;\n  border-radius: 25px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 15px;\n  border-top-right-radius: 15px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  margin-top: 5px;\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  text-align: center;\n  font-size: 30px;\n  font-weight: 700;\n  border: none;\n  outline: none;\n  padding: 10px;\n  margin: 0 20px;\n  &::placeholder {\n    color: #3f51b550;\n    font: inherit;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 78px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  font-size: 20px;\n  font-weight: 600;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #3f51b5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 25px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  border-radius: 25px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  /* border-top-left-radius: 5px;\n  border-top-right-radius: 5px; */\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormDiv, Form, Input, Button } from './Movies.styled';\nimport MoviesListComponent from '../../components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { fetchByQuery } from 'components/services/image-service';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [onError, setOnError] = useState('');\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        if (searchQuery) {\n          const response = await fetchByQuery(searchQuery);\n          if (response.length === 0) {\n            return alert('There is nothing found by your query!');\n          }\n          setMovies(response);\n        }\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('Enter your query!');\n    }\n    setSearchParams({ query });\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n      {isLoading && <Loader />}\n\n      {onError && <p>Error occurred while loading data.</p>}\n      {movies && <MoviesListComponent movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","id","title","original_title","poster","to","state","from","src","alt","axios","api_key","include_adults","fetchTrending","then","data","results","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","profile_path","fetchMovieReviews","author","content","HomeContainer","styled","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","FormDiv","Form","Input","Button","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","onError","setOnError","searchQuery","get","useEffect","fetchData","response","length","onSubmit","e","preventDefault","trim","type","value","onChange","target","Loader","MoviesList"],"sourceRoot":""}