{"version":3,"file":"static/js/33.3c0f185f.chunk.js","mappings":"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","sources":["components/Text/Text.styled.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/image-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.p`\n  font-style: inherit;\n  font-size: 30px;\n  font-weight: 700;\n  text-align: center;\n  margin: 20px;\n`;\n\nexport default Text;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  margin: 20px 0 0 35px;\n  padding: 0;\n  font-size: 24px;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Img = styled.img`\n  border-radius: 25px;\n  max-width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 3px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const MovieTitle = styled.h2`\n  text-align: center;\n  margin-left: 0;\n`;\n\nexport const AddInfo = styled.h3`\n  text-align: center;\n  margin-left: 35px;\n  margin-bottom: 0;\n`;\n\nexport const InfoList = styled.ul`\n  text-align: center;\n  list-style: none;\n  margin-left: 0;\n  margin-top: 0;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-align: center;\n  color: black;\n  text-decoration: none;\n  font-weight: 600;\n  &.active {\n    color: blueviolet;\n    font-weight: 700;\n    transform: scale(1.3);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Btn,\n  MovieContainer,\n  Img,\n  MovieInfo,\n  MovieTitle,\n  AddInfo,\n  InfoList,\n  InfoLink,\n} from './MovieDetails.styled';\nimport { fetchMovieDetails } from 'services/image-service';\nimport Text from 'components/Text/Text.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const {\n    poster,\n    title,\n    original_title,\n    releaseYear,\n    userScore,\n    overview,\n    genres,\n  } = movie ?? {};\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const fetchedMovie = await fetchMovieDetails(movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <div>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </Btn>\n      {isLoading && <Loader />}\n\n      {onError && <Text textAlign=\"center\">{onError}</Text>}\n\n      {movie && (\n        <div>\n          <MovieContainer>\n            <Img\n              src={\n                poster\n                  ? `https://image.tmdb.org/t/p/w200/${poster}`\n                  : 'https://cdn.pixabay.com/photo/2022/03/12/11/15/ukraine-7063987_1280.jpg'\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <MovieTitle>\n                {title || original_title} ({releaseYear})\n              </MovieTitle>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </MovieInfo>\n          </MovieContainer>\n\n          <AddInfo>Additional information</AddInfo>\n\n          <InfoList>\n            <li>\n              <InfoLink to={'cast'} state={{ from: backLinkHref }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to={'reviews'} state={{ from: backLinkHref }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </InfoList>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '53d5445e8f959aee965448ea492bd06d',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/all/day?`);\n  return results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path,\n  }));\n};\n\nexport const fetchByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?query=${query}`);\n  return results.map(({ id, title, poster_path: poster }) => ({\n    id,\n    title,\n    poster,\n  }));\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const {\n    data: {\n      id,\n      poster_path: poster,\n      title,\n      release_date: releaseYear,\n      vote_average: userScore,\n      overview,\n      genres,\n    },\n  } = await axios.get(`/movie/${movieId}?`);\n  return {\n    id,\n    poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n  };\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?`);\n  return cast.map(({ id, name, character, profile_path: poster }) => ({\n    id,\n    name,\n    character,\n    poster,\n  }));\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?`);\n  return results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n"],"names":["Text","styled","Btn","MovieContainer","Img","MovieInfo","MovieTitle","AddInfo","InfoList","InfoLink","NavLink","useState","movie","setMovie","onError","setOnError","isLoading","setIsLoading","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","poster","title","original_title","releaseYear","userScore","overview","genres","useEffect","fetchMovie","fetchMovieDetails","fetchedMovie","type","onClick","Loader","textAlign","src","alt","map","name","join","to","axios","api_key","include_adults","fetchTrending","results","data","id","poster_path","fetchByQuery","query","release_date","vote_average","Date","getFullYear","Math","round","fetchMovieCredits","cast","character","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}