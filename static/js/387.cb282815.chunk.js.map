{"version":3,"file":"static/js/387.cb282815.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/services/image-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const CastItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border: 5px solid red;\n  border-radius: 25px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  border-radius: 25px;\n  height: 260px;\n  width: 100%;\n  display: block;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n\nexport const CastName = styled.h3`\n  text-align: center;\n  margin: 0px;\n`;\n\nexport const CastChar = styled.p`\n  margin: 0px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  Img,\n  CastDescr,\n  CastName,\n  CastChar,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieCredits } from 'components/services/image-service';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState(null);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCredits = async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        if (data.length === 0) {\n          return alert('Ther is nothing found!!!');\n        }\n        setCredits(data);\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {credits && (\n        <CastList>\n          {credits.map(({ id, name, character, poster }) => {\n            return (\n              <CastItem key={id}>\n                <Img\n                  src={\n                    poster\n                      ? `https://image.tmdb.org/t/p/w200/${poster}`\n                      : `https://cdn.pixabay.com/photo/2022/03/12/11/15/ukraine-7063987_1280.jpg`\n                  }\n                  alt={name}\n                />\n                <CastDescr>\n                  <CastName>{name}</CastName>\n                  <CastChar>Character: {character}</CastChar>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n      {isLoading && <Loader />}\n      {onError && <p>Something went wrong</p>}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '53d5445e8f959aee965448ea492bd06d',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const {\n      data: {\n        id,\n        poster_path: poster,\n        title,\n        release_date: releaseYear,\n        vote_average: userScore,\n        overview,\n        genres,\n      },\n    } = await axios.get(`/movie/${movieId}?`);\n    return {\n      id,\n      poster,\n      title,\n      releaseYear: new Date(releaseYear).getFullYear(),\n      userScore: Math.round(userScore * 10),\n      overview,\n      genres,\n    };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// export const fetchMovieCredits = movieId => {\n//   return axios\n//     .get(`/movie/${movieId}/credits?`)\n//     .then(({ data: { cast } }) =>\n//       cast.map(({ id, name, character, profile_path: poster }) => ({\n//         id,\n//         name,\n//         character,\n//         poster,\n//       }))\n//     )\n//     .catch(error => {\n//       alert(error.massage);\n//     });\n// };\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits?`);\n    return cast.map(({ id, name, character, profile_path: poster }) => ({\n      id,\n      name,\n      character,\n      poster,\n    }));\n  } catch (error) {\n    alert(error.massage);\n  }\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n"],"names":["CastContainer","styled","CastList","CastItem","Img","CastDescr","CastName","CastChar","movieId","useParams","useState","credits","setCredits","onError","setOnError","isLoading","setIsLoading","useEffect","fetchCredits","fetchMovieCredits","data","length","alert","map","id","name","character","poster","src","alt","Loader","axios","api_key","include_adults","fetchTrending","then","results","title","poster_path","catch","error","massage","fetchByQuery","query","fetchMovieDetails","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","cast","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}